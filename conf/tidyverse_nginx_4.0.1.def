BootStrap: docker
From: rocker/tidyverse:4.0.1

%runscript
    if [ $# -ne 2 ]; then
        echo "Usage: $(basename $0) NGINX_PORT PROXY_URL"
        exit 1
    fi

    NGINX_PORT="$1"
    # remove leading slash, if any, from the PROXY_URL
    PROXY_URL="${2#/}"

    # trick to find a free port (see https://unix.stackexchange.com/a/132524 and jupyter-server-proxy source code)
    RSTUDIO_PORT="$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')"

    # create Nginx log folder
    mkdir /tmp/nginx

    # create nginx configuration
    sed "s/RSTUDIO_PORT/$RSTUDIO_PORT/; s/NGINX_PORT/$NGINX_PORT/; s|PROXY_URL|$PROXY_URL|" \
        /home/rstudio/nginx.conf.template > /tmp/nginx.conf

    rserver --www-port "$RSTUDIO_PORT" --auth-none 0 --auth-pam-helper pam-helper &
    nginx -c /tmp/nginx.conf -p /tmp -g 'daemon off;'

%post
    apt-get update

    # add SSH for some users workflows
    apt-get install -y openssh-client

    # RStudio server configuration
    echo "www-address=127.0.0.1" >> /etc/rstudio/rserver.conf
    echo "www-frame-origin=same" >> /etc/rstudio/rserver.conf
 
    # TeX Live distribution, for Rmarkdown
    apt-get install -y texlive-full

    # Nginx installation
    apt-get install -y nginx

    # install Python, used to find a free port when starting the container
    apt-get install -y python

    # create Nginx configuration template file for rstudio reverse proxy
    cat << "EOF" > /home/rstudio/nginx.conf.template
pid /tmp/nginx/nginx.pid;
error_log /tmp/nginx/error.log;
worker_processes 1;

events {
  worker_connections 1024;
}

http {
  root /tmp/nginx/;
  access_log /tmp/nginx/access.log;

  client_body_temp_path /tmp/nginx/client_body/;
  fastcgi_temp_path /tmp/nginx/fastcgi/;
  proxy_temp_path /tmp/nginx/proxy/;
  scgi_temp_path /tmp/nginx/scgi/;
  uwsgi_temp_path /tmp/nginx/uwsgi/;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen NGINX_PORT;

    location / {
      proxy_pass http://localhost:RSTUDIO_PORT;
      proxy_redirect http://localhost:RSTUDIO_PORT http://$http_host/PROXY_URL;
      proxy_redirect https://localhost:RSTUDIO_PORT https://$http_host/PROXY_URL;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 20d;
    }
  }
}
EOF
